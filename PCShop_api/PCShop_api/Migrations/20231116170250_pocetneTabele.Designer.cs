// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PCShop_api.Data;

#nullable disable

namespace PCShop_api.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20231116170250_pocetneTabele")]
    partial class pocetneTabele
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("PCShop_api.Data.Models.Artikal", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<int>("Cijena")
                        .HasColumnType("int");

                    b.Property<string>("ImeArtikla")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Opis")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Proizvodjac")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Slika")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TipID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("TipID");

                    b.ToTable("Artikal");
                });

            modelBuilder.Entity("PCShop_api.Data.Models.Kompatibilnost", b =>
                {
                    b.Property<int>("ArtikalKompatibilnostID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ArtikalKompatibilnostID"), 1L, 1);

                    b.Property<int>("Artikal1ID")
                        .HasColumnType("int");

                    b.Property<int>("Artikal2ID")
                        .HasColumnType("int");

                    b.HasKey("ArtikalKompatibilnostID");

                    b.HasIndex("Artikal1ID");

                    b.HasIndex("Artikal2ID");

                    b.ToTable("Kompatibilnost");
                });

            modelBuilder.Entity("PCShop_api.Data.Models.TipArtikla", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<string>("Tip")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("TipArtikla");
                });

            modelBuilder.Entity("PCShop_api.Data.Models.Artikal", b =>
                {
                    b.HasOne("PCShop_api.Data.Models.TipArtikla", "TipArtikla")
                        .WithMany()
                        .HasForeignKey("TipID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("TipArtikla");
                });

            modelBuilder.Entity("PCShop_api.Data.Models.Kompatibilnost", b =>
                {
                    b.HasOne("PCShop_api.Data.Models.Artikal", "Artikal1")
                        .WithMany()
                        .HasForeignKey("Artikal1ID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PCShop_api.Data.Models.Artikal", "Artikal2")
                        .WithMany()
                        .HasForeignKey("Artikal2ID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Artikal1");

                    b.Navigation("Artikal2");
                });
#pragma warning restore 612, 618
        }
    }
}
